{"ast":null,"code":"import _classCallCheck from \"/Users/peter.peck/Desktop/EMSI/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter.peck/Desktop/EMSI/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter.peck/Desktop/EMSI/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter.peck/Desktop/EMSI/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter.peck/Desktop/EMSI/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter.peck/Desktop/EMSI/restful-api/src/components/graph/graph.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nimport percentDiff from 'percentage-difference'; // import \"./graph.css\";\n\nvar Graph =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Graph, _Component);\n\n  function Graph() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Graph);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Graph)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      regionalTrends: null,\n      stateTrends: null,\n      nationTrends: null,\n      yearsArr: []\n    };\n    return _this;\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    //Loads props after componented mounted\n    value: function componentDidMount() {\n      //Calcuate percentage change for the following year\n      var constcalculatesChange = function constcalculatesChange(array) {\n        var diffsArr = [];\n\n        for (var i = 0; i < array.length; i++) {\n          diffsArr.push(percentDiff(array[0], array[i]));\n        }\n\n        ; // Return values in percent\n\n        return diffsArr;\n      }; //Generating year range for x-axis from start to end\n\n\n      var labels = function labels(start, end) {\n        var yearsArr = [];\n\n        for (var i = start; i <= end; i++) {\n          yearsArr.push(i);\n        }\n\n        ;\n        return yearsArr;\n      }; //Shortening name\n\n\n      var data = this.props.dataObj; // console.log(data);\n\n      this.setState({\n        //Trends\n        regionalTrends: constcalculatesChange(data.trend_comparison.regional),\n        stateTrends: constcalculatesChange(data.trend_comparison.state),\n        nationTrends: constcalculatesChange(data.trend_comparison.nation),\n        yearsArr: labels(data.summary.jobs_growth.start_year, data.summary.jobs_growth.end_year)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ctx = \"graph\";\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: this.state.yearsArr,\n          datasets: [{\n            fill: false,\n            borderColor: \"rgb(112, 25, 25)\",\n            borderWidth: 2,\n            data: this.state.regionalTrends\n          }, {\n            fill: false,\n            borderColor: \"rgb(0,0,255)\",\n            borderWidth: 2,\n            data: this.state.stateTrends,\n            pointStyle: 'rect'\n          }, {\n            fill: false,\n            borderColor: \"rgb(0,191,255)\",\n            borderWidth: 2,\n            data: this.state.nationTrends,\n            borderDash: [10, 5],\n            pointStyle: 'triangle'\n          }]\n        },\n        options: {\n          elements: {\n            line: {\n              tension: 0\n            }\n          },\n          legend: {\n            display: false\n          },\n          scales: {\n            yAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\"\n              },\n              ticks: {\n                min: -10 // max: 70\n\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Percentage Change\"\n              }\n            }]\n          }\n        }\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Regional Trends\"), React.createElement(\"hr\", {\n        style: {\n          borderWidth: \"3px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"graph\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\n;\nexport default Graph;","map":{"version":3,"sources":["/Users/peter.peck/Desktop/EMSI/restful-api/src/components/graph/graph.js"],"names":["React","Component","Chart","percentDiff","Graph","state","regionalTrends","stateTrends","nationTrends","yearsArr","constcalculatesChange","array","diffsArr","i","length","push","labels","start","end","data","props","dataObj","setState","trend_comparison","regional","nation","summary","jobs_growth","start_year","end_year","ctx","type","datasets","fill","borderColor","borderWidth","pointStyle","borderDash","options","elements","line","tension","legend","display","scales","yAxes","gridLines","color","ticks","min","scaleLabel","labelString"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CACA;;IAEMC,K;;;;;;;;;;;;;;;;;UAGJC,K,GAAM;AACJC,MAAAA,cAAc,EAAE,IADZ;AAEJC,MAAAA,WAAW,EAAE,IAFT;AAGJC,MAAAA,YAAY,EAAE,IAHV;AAIJC,MAAAA,QAAQ,EAAE;AAJN,K;;;;;;AAON;wCACmB;AAEjB;AACA,UAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,KAAK,EAAI;AACrC,YAAIC,QAAQ,GAAG,EAAf;;AACE,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAGF,KAAK,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AACjCD,UAAAA,QAAQ,CAACG,IAAT,CAAcZ,WAAW,CAACQ,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAACE,CAAD,CAAhB,CAAzB;AACD;;AAAA,SAJkC,CAMrC;;AACA,eAAOD,QAAP;AACD,OARD,CAHiB,CAajB;;;AACA,UAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAQC,GAAR,EAAgB;AAC7B,YAAIT,QAAQ,GAAG,EAAf;;AACA,aAAI,IAAII,CAAC,GAAGI,KAAZ,EAAmBJ,CAAC,IAAIK,GAAxB,EAA6BL,CAAC,EAA9B,EAAiC;AAC/BJ,UAAAA,QAAQ,CAACM,IAAT,CAAcF,CAAd;AACD;;AAAA;AACD,eAAOJ,QAAP;AACD,OAND,CAdiB,CAsBjB;;;AACA,UAAIU,IAAI,GAAG,KAAKC,KAAL,CAAWC,OAAtB,CAvBiB,CAwBjB;;AAEA,WAAKC,QAAL,CAAc;AAEZ;AACAhB,QAAAA,cAAc,EAAEI,qBAAqB,CAACS,IAAI,CAACI,gBAAL,CAAsBC,QAAvB,CAHzB;AAIZjB,QAAAA,WAAW,EAAEG,qBAAqB,CAACS,IAAI,CAACI,gBAAL,CAAsBlB,KAAvB,CAJtB;AAKZG,QAAAA,YAAY,EAAEE,qBAAqB,CAACS,IAAI,CAACI,gBAAL,CAAsBE,MAAvB,CALvB;AAMZhB,QAAAA,QAAQ,EAAEO,MAAM,CAACG,IAAI,CAACO,OAAL,CAAaC,WAAb,CAAyBC,UAA1B,EAAqCT,IAAI,CAACO,OAAL,CAAaC,WAAb,CAAyBE,QAA9D;AANJ,OAAd;AASD;;;6BAEQ;AACP,UAAMC,GAAG,GAAG,OAAZ;AACA,UAAI5B,KAAJ,CAAU4B,GAAV,EAAe;AACbC,QAAAA,IAAI,EAAE,MADO;AAEbZ,QAAAA,IAAI,EAAE;AACFH,UAAAA,MAAM,EAAE,KAAKX,KAAL,CAAWI,QADjB;AAEFuB,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,IAAI,EAAC,KADP;AAEEC,YAAAA,WAAW,EAAE,kBAFf;AAGEC,YAAAA,WAAW,EAAE,CAHf;AAIEhB,YAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC;AAJnB,WADQ,EAOR;AACE2B,YAAAA,IAAI,EAAC,KADP;AAEEC,YAAAA,WAAW,EAAE,cAFf;AAGEC,YAAAA,WAAW,EAAE,CAHf;AAIEhB,YAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWE,WAJnB;AAKE6B,YAAAA,UAAU,EAAC;AALb,WAPQ,EAcR;AACEH,YAAAA,IAAI,EAAC,KADP;AAEEC,YAAAA,WAAW,EAAE,gBAFf;AAGEC,YAAAA,WAAW,EAAE,CAHf;AAIEhB,YAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWG,YAJnB;AAKE6B,YAAAA,UAAU,EAAE,CAAC,EAAD,EAAI,CAAJ,CALd;AAMED,YAAAA,UAAU,EAAC;AANb,WAdQ;AAFR,SAFO;AA4BbE,QAAAA,OAAO,EAAE;AACPC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,IAAI,EAAE;AACJC,cAAAA,OAAO,EAAE;AADL;AADE,WADH;AAMPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,OAAO,EAAE;AADH,WAND;AASPC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CACL;AACEC,cAAAA,SAAS,EAAE;AACTC,gBAAAA,KAAK,EAAE;AADE,eADb;AAIEC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,GAAG,EAAE,CAAC,EADD,CAEL;;AAFK,eAJT;AAQEC,cAAAA,UAAU,EAAE;AACVP,gBAAAA,OAAO,EAAE,IADC;AAEVQ,gBAAAA,WAAW,EAAE;AAFH;AARd,aADK;AADD;AATD;AA5BI,OAAf;AAyDA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAI,QAAA,KAAK,EAAE;AAAChB,UAAAA,WAAW,EAAC;AAAb,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAlHiBlC,S;;AAmHnB;AAED,eAAeG,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport Chart from \"chart.js\";\nimport percentDiff from 'percentage-difference';\n// import \"./graph.css\";\n\nclass Graph extends Component {\n\n  //Declaring states\n  state={\n    regionalTrends: null,\n    stateTrends: null,\n    nationTrends: null,\n    yearsArr: []\n  };\n\n  //Loads props after componented mounted\n  componentDidMount(){\n\n    //Calcuate percentage change for the following year\n    const constcalculatesChange = array => {\n      let diffsArr = [];\n        for(let i=0; i < array.length; i++){\n          diffsArr.push(percentDiff(array[0], array[i]))\n        };\n\n      // Return values in percent\n      return(diffsArr);\n    };\n\n    //Generating year range for x-axis from start to end\n    const labels = (start, end) => {\n      let yearsArr = [];\n      for(let i = start; i <= end; i++){\n        yearsArr.push(i);\n      };\n      return(yearsArr);\n    };\n\n    //Shortening name\n    let data = this.props.dataObj;\n    // console.log(data);\n\n    this.setState({\n\n      //Trends\n      regionalTrends: constcalculatesChange(data.trend_comparison.regional),\n      stateTrends: constcalculatesChange(data.trend_comparison.state),\n      nationTrends: constcalculatesChange(data.trend_comparison.nation),\n      yearsArr: labels(data.summary.jobs_growth.start_year,data.summary.jobs_growth.end_year)\n\n    });\n  };\n\n  render() {\n    const ctx = \"graph\";\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n          labels: this.state.yearsArr,\n          datasets: [\n            {\n              fill:false,\n              borderColor: \"rgb(112, 25, 25)\",\n              borderWidth: 2,\n              data: this.state.regionalTrends\n            },\n            {\n              fill:false,\n              borderColor: \"rgb(0,0,255)\",\n              borderWidth: 2,\n              data: this.state.stateTrends,\n              pointStyle:'rect'\n            },\n            {\n              fill:false,\n              borderColor: \"rgb(0,191,255)\",\n              borderWidth: 2,\n              data: this.state.nationTrends,\n              borderDash: [10,5],\n              pointStyle:'triangle'\n            }\n          ]\n      },\n      options: {\n        elements: {\n          line: {\n            tension: 0\n          }\n        },\n        legend: {\n          display: false\n        },\n        scales: {\n          yAxes: [\n            {\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\",\n              },\n              ticks: {\n                min: -10\n                // max: 70\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Percentage Change\"\n              }\n            }\n          ]\n        }\n      }\n    });\n\n    return(\n      <div>\n        <p className=\"title\">Regional Trends</p>\n        <hr style={{borderWidth:\"3px\"}}/>\n        <canvas id=\"graph\"></canvas>\n      </div>\n    );\n  };\n};\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}