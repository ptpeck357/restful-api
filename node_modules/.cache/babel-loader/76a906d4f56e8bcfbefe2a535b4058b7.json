{"ast":null,"code":"import _classCallCheck from \"C:/Users/Peter/Desktop/Github/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Peter/Desktop/Github/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Peter/Desktop/Github/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Peter/Desktop/Github/restful-api/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Peter\\\\Desktop\\\\Github\\\\restful-api\\\\src\\\\components\\\\graph\\\\graph.js\";\nimport React, { Component } from 'react';\nimport { Chart } from \"chart.js\";\nimport percentDiff from 'percentage-difference'; // import \"./graph.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Graph = /*#__PURE__*/function (_Component) {\n  _inherits(Graph, _Component);\n\n  var _super = _createSuper(Graph);\n\n  function Graph() {\n    _classCallCheck(this, Graph);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Graph, [{\n    key: \"componentDidMount\",\n    value: //Declaring states\n    // state={\n    // \tregionalTrends: null,\n    // \tstateTrends: null,\n    // \tnationTrends: null,\n    // \tyearsArr: []\n    // };\n    //Loads props after componented mounted\n    function componentDidMount() {\n      //Calcuate percentage change for the following year\n      var constcalculatesChange = function constcalculatesChange(array) {\n        var diffsArr = [];\n\n        for (var i = 0; i < array.length; i++) {\n          diffsArr.push(percentDiff(array[0], array[i]));\n        }\n\n        ; // Return values in percent\n\n        return diffsArr;\n      }; //Generating year range for x-axis from start to end\n\n\n      var labels = function labels(start, end) {\n        var yearsArr = [];\n\n        for (var i = start; i <= end; i++) {\n          yearsArr.push(i);\n        }\n\n        ;\n        return yearsArr;\n      }; //Shortening name\n\n\n      var data = this.props.dataObj; // console.log(data);\n\n      this.setState({\n        //Trends\n        regionalTrends: constcalculatesChange(data.trend_comparison.regional),\n        stateTrends: constcalculatesChange(data.trend_comparison.state),\n        nationTrends: constcalculatesChange(data.trend_comparison.nation),\n        yearsArr: labels(data.summary.jobs_growth.start_year, data.summary.jobs_growth.end_year)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ctx = \"graph\";\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: this.state.yearsArr,\n          datasets: [{\n            fill: false,\n            borderColor: \"rgb(112, 25, 25)\",\n            borderWidth: 2,\n            data: this.state.regionalTrends\n          }, {\n            fill: false,\n            borderColor: \"rgb(0,0,255)\",\n            borderWidth: 2,\n            data: this.state.stateTrends,\n            pointStyle: 'rect'\n          }, {\n            fill: false,\n            borderColor: \"rgb(0,191,255)\",\n            borderWidth: 2,\n            data: this.state.nationTrends,\n            borderDash: [10, 5],\n            pointStyle: 'triangle'\n          }]\n        },\n        options: {\n          elements: {\n            line: {\n              tension: 0\n            }\n          },\n          legend: {\n            display: false\n          },\n          scales: {\n            yAxes: [{\n              gridLines: {\n                color: \"rgba(0, 0, 0, 0)\"\n              },\n              ticks: {\n                min: -10 // max: 70\n\n              },\n              scaleLabel: {\n                display: true,\n                labelString: \"Percentage Change\"\n              }\n            }]\n          }\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Regional Trends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            borderWidth: \"3px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return Graph;\n}(Component);\n\n;\nexport default Graph;","map":{"version":3,"sources":["C:/Users/Peter/Desktop/Github/restful-api/src/components/graph/graph.js"],"names":["React","Component","Chart","percentDiff","Graph","constcalculatesChange","array","diffsArr","i","length","push","labels","start","end","yearsArr","data","props","dataObj","setState","regionalTrends","trend_comparison","regional","stateTrends","state","nationTrends","nation","summary","jobs_growth","start_year","end_year","ctx","type","datasets","fill","borderColor","borderWidth","pointStyle","borderDash","options","elements","line","tension","legend","display","scales","yAxes","gridLines","color","ticks","min","scaleLabel","labelString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Chart } from \"chart.js\";\r\nimport percentDiff from 'percentage-difference';\r\n// import \"./graph.css\";\r\n\r\nclass Graph extends Component {\r\n\r\n\t//Declaring states\r\n\t// state={\r\n\t// \tregionalTrends: null,\r\n\t// \tstateTrends: null,\r\n\t// \tnationTrends: null,\r\n\t// \tyearsArr: []\r\n\t// };\r\n\r\n\t//Loads props after componented mounted\r\n\tcomponentDidMount(){\r\n\r\n\t\t//Calcuate percentage change for the following year\r\n\t\tconst constcalculatesChange = array => {\r\n\t\t\tlet diffsArr = [];\r\n\t\t\t\tfor(let i=0; i < array.length; i++){\r\n\t\t\t\t\tdiffsArr.push(percentDiff(array[0], array[i]))\r\n\t\t\t\t};\r\n\r\n\t\t\t// Return values in percent\r\n\t\t\treturn(diffsArr);\r\n\t\t};\r\n\r\n\t\t//Generating year range for x-axis from start to end\r\n\t\tconst labels = (start, end) => {\r\n\t\t\tlet yearsArr = [];\r\n\t\t\tfor(let i = start; i <= end; i++){\r\n\t\t\t\tyearsArr.push(i);\r\n\t\t\t};\r\n\t\t\treturn(yearsArr);\r\n\t\t};\r\n\r\n\t\t//Shortening name\r\n\t\tlet data = this.props.dataObj;\r\n\t\t// console.log(data);\r\n\r\n\t\tthis.setState({\r\n\r\n\t\t\t//Trends\r\n\t\t\tregionalTrends: constcalculatesChange(data.trend_comparison.regional),\r\n\t\t\tstateTrends: constcalculatesChange(data.trend_comparison.state),\r\n\t\t\tnationTrends: constcalculatesChange(data.trend_comparison.nation),\r\n\t\t\tyearsArr: labels(data.summary.jobs_growth.start_year,data.summary.jobs_growth.end_year)\r\n\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst ctx = \"graph\";\r\n\t\tnew Chart(ctx, {\r\n\t\t\ttype: 'line',\r\n\t\t\tdata: {\r\n\t\t\t\t\tlabels: this.state.yearsArr,\r\n\t\t\t\t\tdatasets: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfill:false,\r\n\t\t\t\t\t\t\tborderColor: \"rgb(112, 25, 25)\",\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tdata: this.state.regionalTrends\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfill:false,\r\n\t\t\t\t\t\t\tborderColor: \"rgb(0,0,255)\",\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tdata: this.state.stateTrends,\r\n\t\t\t\t\t\t\tpointStyle:'rect'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfill:false,\r\n\t\t\t\t\t\t\tborderColor: \"rgb(0,191,255)\",\r\n\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\tdata: this.state.nationTrends,\r\n\t\t\t\t\t\t\tborderDash: [10,5],\r\n\t\t\t\t\t\t\tpointStyle:'triangle'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t},\r\n\t\t\toptions: {\r\n\t\t\t\telements: {\r\n\t\t\t\t\tline: {\r\n\t\t\t\t\t\ttension: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t},\r\n\t\t\t\tscales: {\r\n\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgridLines: {\r\n\t\t\t\t\t\t\t\tcolor: \"rgba(0, 0, 0, 0)\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\tmin: -10\r\n\t\t\t\t\t\t\t\t// max: 70\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tscaleLabel: {\r\n\t\t\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\t\t\tlabelString: \"Percentage Change\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<p className=\"title\">Regional Trends</p>\r\n\t\t\t\t<hr style={{borderWidth:\"3px\"}}/>\r\n\t\t\t\t<canvas id=\"graph\"></canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default Graph;\r\n"]},"metadata":{},"sourceType":"module"}